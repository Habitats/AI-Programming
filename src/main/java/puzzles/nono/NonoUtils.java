package puzzles.nono;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Patrick on 01.10.2014.
 */
public class NonoUtils {

  public static List<String> samples = new ArrayList<>();

  static {
    samples.add("5 6\n" + "2 1\n" + "1 2\n" + "3 1\n" + "3 1\n" +"1 2\n" + "2 1\n" + "4\n" + "1 2 1\n" + "6\n" + "1 1\n"
                + "1 2 1\n");
    samples.add("6 7\n" + "6\n" + "1 1\n" + "1 1\n" + "1 1\n" + "1 2 1\n" + "1 1\n" + "2\n" + "1 1\n" + "1 4\n"
                + "1 1 1\n" + "1 1 1\n" + "1 4\n" + "1 1");
    samples.add(
        "15 15\n" + "3 3\n" + "2 2\n" + "2 2\n" + "2 2\n" + "3 2\n" + "4 5\n" + "10\n" + "1 11\n" + "1 11\n" + "13\n"
        + "8 2\n" + "7 2\n" + "3 3 4\n" + "2 2 1 2\n" + "3\n" + "3\n" + "1 6\n" + "11\n" + "9 1\n" + "9\n" + "8\n"
        + "7\n" + "9\n" + "14\n" + "13\n" + "5 1\n" + "9\n" + "1 6\n" + "3\n" + "2\n");
    samples.add(
        "8 9\n" + "5\n" + "3 1\n" + "2 2\n" + "1 1\n" + "1 1\n" + "5\n" + "5\n" + "3\n" + "1 1\n" + "2\n" + "4\n"
        + "8\n" + "4 3\n" + "2 2\n" + "1\n" + "3\n" + "3\n");
    samples.add(
        "15 15\n" + "15\n" + "15\n" + "5 4\n" + "6 1 5\n" + "6 1 3 2\n" + "4 3\n" + "3 5 3\n" + "2 6 3\n" + "1 5 2\n"
        + "1 3 1\n" + "1\n" + "1 1 1\n" + "1 7 1\n" + "10 2\n" + "15\n" + "15\n" + "2 8\n" + "3 7\n" + "3 6\n"
        + "3 2 5\n" + "3 3 2 2\n" + "3 3 2\n" + "3 4 2 2\n" + "3 4 2\n" + "2 3 2 2\n" + "1 2 2\n" + "1 6\n"
        + "1 1 3 4\n" + "2 9\n" + "4 4 1 3\n");
    samples.add(
        "10 10\n" + "2\n" + "4\n" + "6\n" + "8\n" + "10\n" + "10\n" + "10\n" + "10\n" + "3 3\n" + "1 1\n" + "4\n"
        + "6\n" + "8\n" + "8\n" + "8\n" + "8\n" + "8\n" + "8\n" + "6\n" + "4\n");
    samples.add(
        "20 15\n" + "5 4\n" + "7 5\n" + "16\n" + "13\n" + "16\n" + "19\n" + "2 17\n" + "1 16\n" + "5 4 2\n" + "7\n"
        + "5\n" + "3 2\n" + "4 2\n" + "4 3\n" + "4 3\n" + "4\n" + "3\n" + "4\n" + "6\n" + "8\n" + "8\n" + "9\n"
        + "1 9\n" + "2 9\n" + "3 8\n" + "3 7\n" + "3 6\n" + "1 2 8\n" + "2 10\n" + "3 10\n" + "10 3\n" + "3 3 3\n"
        + "6 3\n" + "5 2\n" + "2\n");
    samples.add("20 20\n" + "8\n" + "10\n" + "13\n" + "15\n" + "20\n" + "1 1 1\n" + "15\n" + "2 2 10\n" + "2 2 11\n"
                + "2 2 11\n" + "2 3 10\n" + "3 3 9\n" + "3 3 8\n" + "3 3 7\n" + "3 3 6\n" + "3 3 5\n" + "3 3 4\n"
                + "3 3 3\n" + "3 3\n" + "3\n" + "4 1\n" + "6 1\n" + "3 2 1\n" + "3 3 1 2\n" + "3 6 3\n" + "3 3 2 3\n"
                + "3 3 2 1 4\n" + "3 3 5 5\n" + "3 3 6 5\n" + "2 3 7 5\n" + "1 3 14\n" + "3 9 5\n" + "2 10 5\n"
                + "1 17\n" + "12 5\n" + "12 4\n" + "16\n" + "2\n" + "1\n" + "1\n");
    samples.add("15 15\n" + "15\n" + "2 2\n" + "2 3 2\n" + "2 5 2\n" + "2 5 2\n" + "2 5 2\n" + "4 3 4\n" + "1 2 2 1\n"
                + "1 1 1 1\n" + "1 7 1\n" + "2 2\n" + "2 2\n" + "3 3\n" + "15\n" + "15\n" + "15\n" + "5 7\n" + "3 1 1\n"
                + "2 2 1\n" + "2 3 1\n" + "2 1 3 1\n" + "2 1 5 1\n" + "2 1 5 1\n" + "2 1 5 1\n" + "2 1 3 1\n"
                + "2 3 1\n" + "2 2 1\n" + "3 1 1\n" + "5 7\n" + "15\n");

  }
}
